import React, { Component } from 'react';
import { connect } from 'react-redux'
import Grid from 'material-ui/Grid';
import StatBox from './components/StatBox'
import CustomPieChart from './components/CustomPieChart'
import CustomBarChart from './components/CustomBarChart'
import { fetchFilterData, fetchDashboardData, inputChange, addConstraint} from './actions/dashboardActions'
import ResponsiveDrawer from './components/ResponsiveDrawer'
import CustomSelectBox from './components/CustomSelectBox'
import CustomDatePicker from './components/CustomDatePicker'
import CustomMap from './components/CustomMap'
import Button from 'material-ui/Button';
import { ListItem } from 'material-ui/List';

class App extends Component {


  constructor(props) {
    super(props);

    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
    this.handleClick = this.handleClick.bind(this);
  }

  handleChange(event) {
    const {dispatch} = this.props
    dispatch(inputChange(event.target.name, event.target.value))
    dispatch(addConstraint(event.target.name, event.target.value))

  }  

  handleSubmit(event) {
    const {dispatch} = this.props
    dispatch(fetchDashboardData('complaint/_msearch'));

  }  

  handleClick(data, index) {
    const {dispatch} = this.props
    console.log(data)
    console.log('Clicked')
  }



  componentDidMount(){
    const {dispatch} = this.props
    dispatch(fetchFilterData('complaint/_msearch'));
    dispatch(fetchDashboardData('complaint/_msearch'));
  }


  render() {
    const {data, form, filter} = this.props
    if((Object.keys(data).length === 0 && data.constructor === Object) ||
       (Object.keys(filter["data"]).length === 0 && filter["data"].constructor === Object))
      return null

    return (
      <div>

        <Grid container spacing={24}>  

          <Grid item lg={3} sm={2} xs={12}>
            <ResponsiveDrawer>
              <CustomSelectBox id="cityDistrictName" name="District" data={filter.data.uniqDistricts} handleChange={this.handleChange} value={form.cityDistrictName}></CustomSelectBox>
              <CustomSelectBox id="cityName" name="City" data={filter.data.uniqCities} handleChange={this.handleChange} value={form.cityName}></CustomSelectBox>
              <CustomDatePicker id="startDate" handleChange={this.handleChange} name="Start Date" value={form.startDate}></CustomDatePicker>
              <CustomDatePicker id="endDate" handleChange={this.handleChange} name="End Date" value={form.endDate}></CustomDatePicker>
              <CustomSelectBox id="receivingMode" name="Source" data={filter.data.uniqSources} handleChange={this.handleChange}  value={form.receivingMode}></CustomSelectBox>
              <ListItem><Button variant="raised" color="secondary" onClick={this.handleSubmit}>Submit</Button></ListItem>
            </ResponsiveDrawer>
          </Grid>
          <Grid item lg={2} sm={4} xs={6}>
            <StatBox value={data.totalComplaints} heading="Total Complaints"></StatBox>
          </Grid>        
          <Grid item lg={2} sm={4} xs={6}>
            <StatBox value={data.openComplaints} heading="Open Complaints"></StatBox>
          </Grid>          
          <Grid item lg={2} sm={4} xs={6}>
            <StatBox value={data.reopenedComplaints} heading="Reopened Complaints"></StatBox>
          </Grid>      
          <Grid item lg={2} sm={4} xs={6}>
            <StatBox value={data.slaBreached + "%"} heading="SLA Breached"></StatBox>
          </Grid> 
          <Grid item lg={1} sm={1} ></Grid>
          

          <Grid item lg={3} sm={2} xs={12}></Grid>          
          <Grid item lg={8} sm={8} xs={12}>
            <CustomMap data={data.slaBreachedByDistrict} />
          </Grid>

          <Grid item lg={3} sm={2} ></Grid>
          <Grid item lg={4} sm={6} xs={12}>
            <CustomPieChart data={data.slaCount} heading="SLA Adherance" />
          </Grid>          
          <Grid item lg={4} sm={6} xs={12}>
            <CustomPieChart onClick={this.handleClick} data={data.complaintSources} heading="Complaint Sources" />
          </Grid>
          <Grid item lg={1} sm={1} ></Grid>   


          <Grid item lg={3} sm={2} ></Grid>       
          <Grid item lg={4} sm={6} xs={12}>
            <CustomBarChart data={data.categories} layout="vertical" heading="Complaint Category" />
          </Grid> 
        </Grid>
      </div> 
    );
  }
}

const mapStateToProps = state => {

  const {dashboardReducer} = state || {}
  const {dashboard, form, query, filter} = dashboardReducer || {}
  return {
    data: dashboard.data || {},
    form: form || {},
    query: query || {},
    filter: filter || {}
  }
}


export default connect(mapStateToProps)(App)


